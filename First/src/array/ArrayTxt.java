/*
 * 배열과 ArrayList
 * 자료형이 같은 자료를 여러 개 처리해서 구현해야하는 경우, 
 *	 변수를 각각 선언하는 것보다 여러 자료를 한번에 처리할 수 있는 기능이 필요함
 * 배열은 자료가 연속으로 나열된 자료구조로, 자료형이 같은 여러 자료를 효율적으로 다룰 수 있음
 * 
 * 배열 선언과 초기화
 * 배열을 사용하려면 먼저 배열을 선언해야하고, 변수와 마찬가지로 자료형을 함께 선언함
 * 배열 선언 방식은 다음과 같음 
 * 	자료형[] 변수이름 = new 자료형[개수]
 * 
 * 배열을 선언하면 선언한 자료형과 배열 길이에 따라 메모리가 할당됨
 * 예시) int형 자료 저장공간이 총 10개인 배열 = 4바이트 * 10개 = 40바이트 메모리 할당
 * 
 * 
 * 배열 초기화하기
 * 자바에서 배열을 선언하면 그와 동시에 각 요소값이 초기화됨
 * 자료형에 따라 정수 0, 실수 0.0, 객체 배열은 null로 초기화되며 배열 선언과 동시에 특정값으로 초기화할 수도 있음
 * 초기화 요소의 개수만큼 배열이 생성되므로 배열 선언 시 [] 배열개수는 생략함 
 * 
 * 
 * 배열 사용하기
 * 선언한 배열의 각 요소에 값을 넣을 때나 배열 요소에 있는 값을 가져올 때 인덱스 연산자[]를 사용함
 * 인덱스 연산자는 배열 요소가 저장된 메모리 위치를 찾아주는 역할
 * 배열에서 [i] 인덱스 연산을 하면 배열 내 i번쨰 요소의 위치를 찾아 해당 위치의 메모리에 값을 넣거나, 저장된 값을 가져와 사용할 수 있음
*/

//배열 사용해보기
package array;

public class ArrayTxt {
	public static void main(String[] args) {
		// 배열 선언
		int[] studentIDs = new int[10]; // int형 요소가 10개인 배열
		
		// 배열 초기화하기
		int[] studentIDs = new int[] {101, 102, 103};	// [] 안에 배열개수 입력 시 오류 발생함
//		int[] studentIDs = new int[3] {101, 102, 103};	// 오류 발생
		 
		// 배열 초기화 약식 
		int[] studentIds = {102, 102, 103};	// new int[]도 생략 가능
		
		// 배열 자료형만 선언
		int[] studentIDs;	// 배열 자료형만 먼저 선언
		studentIDs = new int[] {101, 102, 103};	// 배열 자료형만 먼저 선언하고 초기화하는 경우 new int[] 생략 불가
		
		
		
		// 배열 사용하기
	}

}

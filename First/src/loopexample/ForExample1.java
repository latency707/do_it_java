/*
 * for문
 * for문은 반복 횟수를 관리할 수 있고 가독성도 뛰어나기 때문에가장 많이 쓰이는 반복문임
 * 같은 자료형이 순서대로 모여있는 배열과 함께 자주 사용됨
 * 배열의 순서가 항상 0부터 시작되기 때문에 증감에 따른 반복을 표현하는 데 적합한 for문의 특성때문에 함께 쓰기에 용이하기 때문
 * 
 * for문의 기본 구조는 다음과 같음
 * for(초기화식;조건식;증감식) { 수행문 };
 * 초기화식은 최초 1회만 실행, 조건식에서 반복 조건을 지정하고, 증감식에서는 증감식 또는 for문에서 사용하는 변수 값을 증감시킴
 * 
 * 코드가 중복되거나 논리 흐름상 사용할 필요가 없을 때 구성 요소를 생략할 수 있음 
 * 초기화식 생략: 이미 다른 곳에서 변수가 초기화된 경우
 * 조건식 생략: 어떤 연산결과 값이 나왔을 때 바로 for문의 수행을 멈추려면 조건식을 생략하고 for문 안에 if문을 사용하면 됨
 * 증감식 생략: 증감식의 연산이 복잡하거나 다른 변수의 연산 결과값에 좌우되는 경우
 * 모든 요소 생략: 무한반복이 필요한 경우
*/

// for문으로 1부터 10까지 더하기
package loopexample;

public class ForExample1 {
	public static void main(String[] args) {
		int i;
		int sum;
		
		for (i = 1, sum = 0 ; i <= 10; i++) {
			sum += i;
		}
		
		System.out.println("1부터 10까지의 총 합은 " + sum + "입니다.");
		
		
		// Q) for문과 변수를 사욯하여 'HELLO1' 부터 'HELLO10'까지 차례로 출력하는 프로그램을 작성하시오.
		int j;
		String greet = "HELLO";
		
		for (j = 1; j <=10; j++) {
			System.out.println(greet + j);
		}
	}

}
